Software projects for the msp430g2 eval boards

I'm building using Cygwin + Windows 10 but should be simple to adapt to other environments
Requirements
    msp430-gcc:     https://www.ti.com/tool/MSP430-GCC-OPENSOURCE
    MSP430Flasher:  https://www.ti.com/tool/MSP430-FLASHER (note you can use UniFlash if you want a GUI)
    GRACE:          https://www.ti.com/tool/GRACE (I used this to help get started, but it's not necessary)

Building:
    Each project directory should have a Makefile which defines a couple of variables
    and then includes helper.mk which builds everything.
    To build a project go to it's directory in cygwin and run "make".
    You can cleanup with "make clean".
    You can also build each project via the top level Makefile (in this directory)
    with for example "make reader" or "make card_emulator".

Programming:
    You can program the target board using "make program" from the project directory.
    Or with for example "make reader_program" from the top level directory.
    The helper.mk looks at flasher_config in this directory to work out which device should
    be used to program the board. This allows you to have multiple boards connected at once
    and to only ever program the correct project to the correct board. Please see notes in
    flasher_config for more information.

test:
    basic hello world project to test peripheral control.
    This was largely generated by using GRACE, which had a few bugs that I had to fix.
    Leaving with the original code as much as possible so I can diff it against future GRACE builds.
    It does the following:
        Uses the WDT in interval mode for timing. This uses interrupts)
        UART comms to the programmer chip @9600 baud 8n1
        Blinks LED1 at 1Hz
        Chase pattern on the 3 LEDs on the DLP-7970ABP booster pack board
        Writes and Reads from the TRF7970A RAM register via SPI
    Notes:
        Can be used with or without the booster pack present
        Requires the jumper for LED1.
        Requires the UART jumpers in HW mode
        LED1 is controlled by p1.0, which is the ULP Wakeup on the DLP-7970ABP booster pack board
            Not sure if this jumper being on or not will affect the TRF7970A, but might be worth
            making sure it's not there when in use with the booster pack.

reader:
    A project to read the radiation sensor tag.
    It uses the DLP-7970ABP booster pack, with the TRF7970A to talk ISO 14443-4A
    Then uses my custom protocol to request and read the sensor data.
    This project can be used with the actual tag fabricated in an ASIC, or to a tag running in an FPGA.
    In the case of the tag running in an FPGA, an analogue front end (AFE) must be used to convert the RF
    signals into digital clock and data and send them to the FPGA, take the digital response and
    send it back to the reader using load modulation. My intention is to use a second msp-exp430g2
    + dlp-7970ABP setup as the AFE, however any other AFE will work providing it produces the correct
    data signals.
    Notes:
        Requires the msp-exp430g2 + DLP-7970ABP.
        Boths LED jumpers should not be present.
        The UART jumpers should be in HW mode in order to access the debug UART interface.
        There are two IRQ pins. My board uses IRQ1. However the schematic indicates that IRQ2
            should be the default. If you use IRQ2 then you will need to modify the code or your board.

card_emulator:
    A project to emulate an RFID card
    It uses the DLP-7970ABP booster pack, with the TRF7970A to emulate an ISO 14443-4A card
    It responds to my custom protocol for reading the radiation sensor.
    The goal of this project is to learn more about how a tag responds, and the timings,
    as a quick test to make sure the reader project is working correctly, and to confirm
    that the TRF7970A is correctly set up in card emulation mode.
    This project will eventually be replaced by the AFE project + my design running in an FPGA.
    Notes:
        Requires the msp-exp430g2 + DLP-7970ABP.
        Boths LED jumpers should not be present.
        The UART jumpers should be in HW mode in order to access the debug UART interface.
        There are two IRQ pins. My board uses IRQ1. However the schematic indicates that IRQ2
            should be the default. If you use IRQ2 then you will need to modify the code or your board.
